% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/longitudinal_data.R
\name{longitudinal_data}
\alias{longitudinal_data}
\title{longitudinal_data is a R function to generate data from the following linear mixed model
Y_ij|b_i ~ N(intercept + b_0i + (slope + b_1i) x t_ij , sigma_e_0 + sigma_e_1 x t_ij)
with b_i ~ N(0, Sigma2_b)}
\usage{
longitudinal_data(
  n,
  tmin = 0,
  tmax = 1,
  sd_tmin,
  sd_tmax,
  pas,
  intercept,
  slope,
  sigma2_b,
  group
)
}
\arguments{
\item{n}{number of subjects}

\item{tmin}{numerical positive value indicating the minimum of time windows (baseline, by default 0)}

\item{tmax}{numerical positive value indicating the maximum of the follow-up (by default 1)}

\item{sd_tmin}{positive value of error standard deviation at tmin}

\item{sd_tmax}{positive value of error standard deviation at tmax}

\item{pas}{time between two successive measurements}

\item{intercept}{value of intercept fixed effect at tmin for the linear trajectory}

\item{slope}{value of slope fixed effect for the linear trajectory}

\item{sigma2_b}{covariance matrix of random effects b_i}

\item{group}{name of the subject group (type: characters)}
}
\value{
A dataframe with generated data
}
\description{
longitudinal_data is a R function to generate data from the following linear mixed model
Y_ij|b_i ~ N(intercept + b_0i + (slope + b_1i) x t_ij , sigma_e_0 + sigma_e_1 x t_ij)
with b_i ~ N(0, Sigma2_b)
}
\examples{

n <- 200
data_constant <- longitudinal_data(n = n,
                                   tmin = 0,
                                   tmax = 5,
                                   pas = 0.5,
                                   sd_tmin = 10*2/3,
                                   sd_tmax = 10*2/3,
                                   intercept = 0,
                                   slope = 1,
                                   sigma2_b = matrix(c(sigma2_b_00, sigma2_b_01, sigma2_b_01, sigma2_b_11), ncol = 2),
                                   group = "Constant variability")

data_decrease <- longitudinal_data(n = n,
                                   tmin = 0,
                                   tmax = 5,
                                   pas = 0.5,
                                   sd_tmin = 10,
                                   sd_tmax = 10/3,
                                   intercept = 0,
                                   slope = 1,
                                   sigma2_b = matrix(c(sigma2_b_00, sigma2_b_01, sigma2_b_01, sigma2_b_11), ncol = 2),
                                   group = "Decreasing variability")

data_increase <- longitudinal_data(n = n,
                                   tmin = 0,
                                   tmax = 5,
                                   pas = 0.5,
                                   sd_tmin = 10/3,
                                   sd_tmax = 10,
                                   intercept = 0,
                                   slope = 1,
                                   sigma2_b = matrix(c(sigma2_b_00, sigma2_b_01, sigma2_b_01, sigma2_b_11), ncol = 2),
                                   group = "Increasing variability")

# wide data
data_trans <- data_increase$data_trans
data_trans$id <- data_trans$id + n
data_trans <- rbind(data_trans, data_constant$data_trans)
data_trans$id <- data_trans$id + n
data_trans <- rbind(data_trans, data_decrease$data_trans)
data_trans <- data_trans[order(data_trans$id), ]
data_trans$id
table(data_trans$variability)


# longitudinal data
data_long <- data_increase$data_long
data_long$id <- data_long$id + n
data_long <- rbind(data_long, data_constant$data_long)
data_long$id <- data_long$id + n
data_long <- rbind(data_long, data_decrease$data_long)
data_long <- data_long[order(data_long$id), ]
unique(data_long$id)
table(data_long$variability)


# Generation of Survival data
surv.data <- survival_data(data_trans,
                           censoring_param = c(5,2),
                           tmax = 5,
                           lambda = -6,
                           covariate = matrix(rbinom(nrow(data_trans), 1, prob = 0.4), ncol = 1),
                           alpha_cov = c(0.3),
                           alpha_sigma = 0.5,
                           alpha_mu = 0.1)
}
